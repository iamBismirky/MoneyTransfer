<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAATrzAAE68wEXCzLMAAAAB3RJ
        TUUH5wIPESEoQfi28gAAA/JJREFUWEfVl7uOU1cUhj2kQAKFq0hCqAaF+Nhje8YzXYow3BJAAUY8AQ0S
        8Aw0uRRAiqSioKAgTUpIKHgJoMkFBK+QBAqgIZfv22dt+4zHZuxhQMqSPp3jvdde/z77ulz731ijPS9T
        sANm4RicDY5DF3bCBohW62AGg83wOXwP9+AveAn/Br4/hfugj762iShrMBs3WvPv8DwEt+AZKObzN7gD
        1wLff4Gqz09wGIwRUcc0G8AWuAh/gEEfwCVYhPdgY7OzMCW+w66o0+d3sI1tv4RtENFXMR3hA7gODq1B
        voVpRiTVjzLripmuz2m4ArY1xg/wIYTnCNMB/HLF/YLHcAomGkZ9Y/pOwkMwlp0wdngNmBXgCnbY/wHF
        DxV8dbMzvng22mY+hUdgzK9h+MdYCC6aP4Mly4r2QnhMbs2YMnAUc9zPLFtmFsAmuAkOl/O3LvvZGI32
        grEug7HdHcu3qD/gKDwHV/Bey6pW8BumYEO91Y7Svn3UnDOG9RKlpRkrYhr7BXhwVSpnkoMHiD10G6Xy
        bPVWtzb9ccsO1OFA0e5uV+T0YrtWbFzKndsGi1Cvz8ylsmw5HnwDalydibJc4fF6FxwB93I0LS0E/DLE
        5y/ASUidKFigPBX/Aqw7WHA2DK4dY0ZsNdRSs1cxBx6vv8L7lg1aEitFFT8fT4W3guKWLcEOiFZ9M2bE
        VkMtNXsVXix/g0eqp1o061sa6k632olzcApOxHtPfBdTM2jGjNhqqKVmr8Ibzbm51ui4mIZvvaJ2JnfC
        L1dcYTkNSfzdw63wXm5OVWxL7w611FzZgWYSeEUH8AeHPX95/no7VTszogONzgKnYzqmh3ZgvCkoxfOC
        y1+uuO+9henuGDRjRuyhU2Ay8QS8Ur3polnfDAxZPC84BS2rLszUiUEzZsRWQy01exVmMiYaI7chZW5D
        97lbDfEuc850pSlL54LiaRuGb7QuzZgRWw211Cwr6rOp8jtwboYfRPsadsSD6GApXq72cmp6u4O6+aYX
        mPXZcjwwN1CjfxBVHMY+iot2J0r7tm+WBdZK9aO+fvhRrPkDvCBMvezhleZ6XkatFCsfwz/DynzRAqhe
        x16hlHXDY3Izj4gsysRk9HWsWejw8nSeTB7MZPZ7KK2lE4o7FcT4BMwny4SkzJTCa8CsgK1wAxyutadk
        ZZsToLixfoTVk1MdYDeYw5lQOmwmKNNFeZKF50qzLnxMSp3znJQqvgfCcxXTERyJr6CalhvUveyBwqnW
        nUKwmpYzZWkKq2m5eeD4aXk2G4DDeARcuZP+MbkNtp1o+laYjcFt4969CiYTr/prpo++r/fXbNAMBm//
        z+mbtVrtP6Tx7yae5UrRAAAAAElFTkSuQmCC
</value>
  </data>
</root>